const Index = [
  {
    title: '',
    content: [
      'DNS解析的过程就是寻找哪台机器上有你需要资源的过程。',
      '当你在浏览器中输入一个地址时，例如www.baidu.com，其实不是百度网站真正意义上的地址。',
      '互联网上每一台计算机的唯一标识是它的IP地址，但是IP地址并不方便记忆。用户更喜欢用方便记忆的网址去寻找互联网上的其它计算机，也就是上面提到的百度的网址。',
      '所以互联网设计者需要在用户的方便性与可用性方面做一个权衡，这个权衡就是一个网址到IP地址的转换，这个过程就是DNS解析。它实际上充当了一个翻译的角色，实现了网址到IP地址的转换。',
      '网址到IP地址转换的过程是如何进行的?',
    ],
    method: 'content',
    type: 'listAll'
  },{
    title: '解析过程',
    content: [
      '首先在本地域名服务器中查询IP地址，如果没有找到的情况下，本地域名服务器会向根域名服务器发送一个请求，如果根域名服务器也不存在该域名时，本地域名会向com顶级域名服务器发送一个请求，依次类推下去。直到最后本地域名服务器得到google的IP地址并把它缓存到本地，供下次查询使用。',
      '从上述过程中，可以看出网址的解析是一个从右向左的过程: com -> google.com -> www.google.com。',
      '但是你是否发现少了点什么，根域名服务器的解析过程呢？事实上，真正的网址是www.google.com.，并不是我多打了一个.，这个.对应的就是根域名服务器，默认情况下所有的网址的最后一位都是.，既然是默认情况下，为了方便用户，通常都会省略，浏览器在请求DNS的时候会自动加上，所有网址真正的解析过程为: . -> .com -> google.com. -> www.google.com.'
    ],
    method: 'content',
    type: 'listAll'
  },{
    title: 'DNS优化',
    content: [
      '了解了DNS的过程，可以为我们带来哪些？上文中请求到google的IP地址时，经历了8个步骤，这个过程中存在多个请求(同时存在UDP和TCP请求，为什么有两种请求方式，请自行查找)。',
      '如果每次都经过这么多步骤，是否太耗时间？如何减少该过程的步骤呢？那就是DNS缓存。'
    ],
    method: 'content',
    type: 'listAll'
  },{
    title: 'DNS缓存',
    content: [
      'DNS存在着多级缓存，从离浏览器的距离排序的话，有以下几种: 浏览器缓存，系统缓存，路由器缓存，IPS服务器缓存，根域名服务器缓存，顶级域名服务器缓存，主域名服务器缓存。',
      '在你的chrome浏览器中输入:chrome://dns/，你可以看到chrome浏览器的DNS缓存。',
      '系统缓存主要存在/etc/hosts(Linux系统)中'
    ],
    method: 'content',
    type: 'listAll'
  },{
    title: 'DNS负载均衡',
    content: [
      'DNS返回的IP地址是否每次都一样？如果每次都一样是否说明你请求的资源都位于同一台机器上面，那么这台机器需要多高的性能和储存才能满足亿万请求呢？',
      '其实真实的互联网世界背后存在成千上百台服务器，大型的网站甚至更多。但是在用户的眼中，它需要的只是处理他的请求，哪台机器处理请求并不重要。',
      'DNS可以返回一个合适的机器的IP给用户，例如可以根据每台机器的负载量，该机器离用户地理位置的距离等等，这种过程就是DNS负载均衡，又叫做DNS重定向。',
      '大家耳熟能详的CDN(Content Delivery Network)就是利用DNS的重定向技术，DNS服务器会返回一个跟用户最接近的点的IP地址给用户，CDN节点的服务器负责响应用户的请求，提供所需的内容',
    ],
    method: 'content',
    type: 'listAll'
  }
]

export default Index